// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: connection.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Indy.Agent.Messages
{

    /// <summary>Holder for reflection information generated from connection.proto</summary>
    public static partial class ConnectionReflection
    {

        #region Descriptor
        /// <summary>File descriptor for connection.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static ConnectionReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "ChBjb25uZWN0aW9uLnByb3RvIlUKD0Nvbm5lY3Rpb25PZmZlchILCgNkaWQY",
                  "ASABKAkSDgoGdmVya2V5GAIgASgJEhAKCGVuZHBvaW50GAMgASgJEhMKC29m",
                  "ZmVyX25vbmNlGAQgASgJIm8KEUNvbm5lY3Rpb25SZXF1ZXN0EgsKA2RpZBgB",
                  "IAEoCRIOCgZ2ZXJrZXkYAiABKAkSFQoNcmVxdWVzdF9ub25jZRgDIAEoCRIU",
                  "CgxlbmRwb2ludF9kaWQYBCABKAkSEAoIZW5kcG9pbnQYBSABKAkiSAoSQ29u",
                  "bmVjdGlvblJlc3BvbnNlEgsKA2RpZBgBIAEoCRIOCgZ2ZXJrZXkYAiABKAkS",
                  "FQoNcmVxdWVzdF9ub25jZRgDIAEoCSIsChlDb25uZWN0aW9uQWNrbm93bGVk",
                  "Z2VtZW50Eg8KB21lc3NhZ2UYASABKAkiJgoHU2VuZE55bRILCgNkaWQYASAB",
                  "KAkSDgoGdmVya2V5GAIgASgJIhcKFUNyZWF0ZUNvbm5lY3Rpb25PZmZlckIW",
                  "qgITSW5keS5BZ2VudC5NZXNzYWdlc2IGcHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Indy.Agent.Messages.ConnectionOffer), global::Indy.Agent.Messages.ConnectionOffer.Parser, new[]{ "Did", "Verkey", "Endpoint", "OfferNonce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Indy.Agent.Messages.ConnectionRequest), global::Indy.Agent.Messages.ConnectionRequest.Parser, new[]{ "Did", "Verkey", "RequestNonce", "EndpointDid", "Endpoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Indy.Agent.Messages.ConnectionResponse), global::Indy.Agent.Messages.ConnectionResponse.Parser, new[]{ "Did", "Verkey", "RequestNonce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Indy.Agent.Messages.ConnectionAcknowledgement), global::Indy.Agent.Messages.ConnectionAcknowledgement.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Indy.Agent.Messages.SendNym), global::Indy.Agent.Messages.SendNym.Parser, new[]{ "Did", "Verkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Indy.Agent.Messages.CreateConnectionOffer), global::Indy.Agent.Messages.CreateConnectionOffer.Parser, null, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class ConnectionOffer : pb::IMessage<ConnectionOffer>
    {
        private static readonly pb::MessageParser<ConnectionOffer> _parser = new pb::MessageParser<ConnectionOffer>(() => new ConnectionOffer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConnectionOffer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Indy.Agent.Messages.ConnectionReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionOffer()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionOffer(ConnectionOffer other) : this()
        {
            did_ = other.did_;
            verkey_ = other.verkey_;
            endpoint_ = other.endpoint_;
            offerNonce_ = other.offerNonce_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionOffer Clone()
        {
            return new ConnectionOffer(this);
        }

        /// <summary>Field number for the "did" field.</summary>
        public const int DidFieldNumber = 1;
        private string did_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Did
        {
            get { return did_; }
            set
            {
                did_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "verkey" field.</summary>
        public const int VerkeyFieldNumber = 2;
        private string verkey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Verkey
        {
            get { return verkey_; }
            set
            {
                verkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "endpoint" field.</summary>
        public const int EndpointFieldNumber = 3;
        private string endpoint_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Endpoint
        {
            get { return endpoint_; }
            set
            {
                endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "offer_nonce" field.</summary>
        public const int OfferNonceFieldNumber = 4;
        private string offerNonce_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OfferNonce
        {
            get { return offerNonce_; }
            set
            {
                offerNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ConnectionOffer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConnectionOffer other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Did != other.Did) return false;
            if (Verkey != other.Verkey) return false;
            if (Endpoint != other.Endpoint) return false;
            if (OfferNonce != other.OfferNonce) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Did.Length != 0) hash ^= Did.GetHashCode();
            if (Verkey.Length != 0) hash ^= Verkey.GetHashCode();
            if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
            if (OfferNonce.Length != 0) hash ^= OfferNonce.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Did.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Did);
            }
            if (Verkey.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Verkey);
            }
            if (Endpoint.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Endpoint);
            }
            if (OfferNonce.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(OfferNonce);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Did.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Did);
            }
            if (Verkey.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Verkey);
            }
            if (Endpoint.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
            }
            if (OfferNonce.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferNonce);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConnectionOffer other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Did.Length != 0)
            {
                Did = other.Did;
            }
            if (other.Verkey.Length != 0)
            {
                Verkey = other.Verkey;
            }
            if (other.Endpoint.Length != 0)
            {
                Endpoint = other.Endpoint;
            }
            if (other.OfferNonce.Length != 0)
            {
                OfferNonce = other.OfferNonce;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Did = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Verkey = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Endpoint = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            OfferNonce = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ConnectionRequest : pb::IMessage<ConnectionRequest>
    {
        private static readonly pb::MessageParser<ConnectionRequest> _parser = new pb::MessageParser<ConnectionRequest>(() => new ConnectionRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConnectionRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Indy.Agent.Messages.ConnectionReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionRequest(ConnectionRequest other) : this()
        {
            did_ = other.did_;
            verkey_ = other.verkey_;
            requestNonce_ = other.requestNonce_;
            endpointDid_ = other.endpointDid_;
            endpoint_ = other.endpoint_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionRequest Clone()
        {
            return new ConnectionRequest(this);
        }

        /// <summary>Field number for the "did" field.</summary>
        public const int DidFieldNumber = 1;
        private string did_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Did
        {
            get { return did_; }
            set
            {
                did_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "verkey" field.</summary>
        public const int VerkeyFieldNumber = 2;
        private string verkey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Verkey
        {
            get { return verkey_; }
            set
            {
                verkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "request_nonce" field.</summary>
        public const int RequestNonceFieldNumber = 3;
        private string requestNonce_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RequestNonce
        {
            get { return requestNonce_; }
            set
            {
                requestNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "endpoint_did" field.</summary>
        public const int EndpointDidFieldNumber = 4;
        private string endpointDid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EndpointDid
        {
            get { return endpointDid_; }
            set
            {
                endpointDid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "endpoint" field.</summary>
        public const int EndpointFieldNumber = 5;
        private string endpoint_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Endpoint
        {
            get { return endpoint_; }
            set
            {
                endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ConnectionRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConnectionRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Did != other.Did) return false;
            if (Verkey != other.Verkey) return false;
            if (RequestNonce != other.RequestNonce) return false;
            if (EndpointDid != other.EndpointDid) return false;
            if (Endpoint != other.Endpoint) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Did.Length != 0) hash ^= Did.GetHashCode();
            if (Verkey.Length != 0) hash ^= Verkey.GetHashCode();
            if (RequestNonce.Length != 0) hash ^= RequestNonce.GetHashCode();
            if (EndpointDid.Length != 0) hash ^= EndpointDid.GetHashCode();
            if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Did.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Did);
            }
            if (Verkey.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Verkey);
            }
            if (RequestNonce.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(RequestNonce);
            }
            if (EndpointDid.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(EndpointDid);
            }
            if (Endpoint.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(Endpoint);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Did.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Did);
            }
            if (Verkey.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Verkey);
            }
            if (RequestNonce.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestNonce);
            }
            if (EndpointDid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(EndpointDid);
            }
            if (Endpoint.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConnectionRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Did.Length != 0)
            {
                Did = other.Did;
            }
            if (other.Verkey.Length != 0)
            {
                Verkey = other.Verkey;
            }
            if (other.RequestNonce.Length != 0)
            {
                RequestNonce = other.RequestNonce;
            }
            if (other.EndpointDid.Length != 0)
            {
                EndpointDid = other.EndpointDid;
            }
            if (other.Endpoint.Length != 0)
            {
                Endpoint = other.Endpoint;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Did = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Verkey = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            RequestNonce = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            EndpointDid = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            Endpoint = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ConnectionResponse : pb::IMessage<ConnectionResponse>
    {
        private static readonly pb::MessageParser<ConnectionResponse> _parser = new pb::MessageParser<ConnectionResponse>(() => new ConnectionResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConnectionResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Indy.Agent.Messages.ConnectionReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionResponse(ConnectionResponse other) : this()
        {
            did_ = other.did_;
            verkey_ = other.verkey_;
            requestNonce_ = other.requestNonce_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionResponse Clone()
        {
            return new ConnectionResponse(this);
        }

        /// <summary>Field number for the "did" field.</summary>
        public const int DidFieldNumber = 1;
        private string did_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Did
        {
            get { return did_; }
            set
            {
                did_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "verkey" field.</summary>
        public const int VerkeyFieldNumber = 2;
        private string verkey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Verkey
        {
            get { return verkey_; }
            set
            {
                verkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "request_nonce" field.</summary>
        public const int RequestNonceFieldNumber = 3;
        private string requestNonce_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RequestNonce
        {
            get { return requestNonce_; }
            set
            {
                requestNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ConnectionResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConnectionResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Did != other.Did) return false;
            if (Verkey != other.Verkey) return false;
            if (RequestNonce != other.RequestNonce) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Did.Length != 0) hash ^= Did.GetHashCode();
            if (Verkey.Length != 0) hash ^= Verkey.GetHashCode();
            if (RequestNonce.Length != 0) hash ^= RequestNonce.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Did.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Did);
            }
            if (Verkey.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Verkey);
            }
            if (RequestNonce.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(RequestNonce);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Did.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Did);
            }
            if (Verkey.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Verkey);
            }
            if (RequestNonce.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestNonce);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConnectionResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Did.Length != 0)
            {
                Did = other.Did;
            }
            if (other.Verkey.Length != 0)
            {
                Verkey = other.Verkey;
            }
            if (other.RequestNonce.Length != 0)
            {
                RequestNonce = other.RequestNonce;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Did = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Verkey = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            RequestNonce = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ConnectionAcknowledgement : pb::IMessage<ConnectionAcknowledgement>
    {
        private static readonly pb::MessageParser<ConnectionAcknowledgement> _parser = new pb::MessageParser<ConnectionAcknowledgement>(() => new ConnectionAcknowledgement());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConnectionAcknowledgement> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Indy.Agent.Messages.ConnectionReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionAcknowledgement()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionAcknowledgement(ConnectionAcknowledgement other) : this()
        {
            message_ = other.message_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConnectionAcknowledgement Clone()
        {
            return new ConnectionAcknowledgement(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message
        {
            get { return message_; }
            set
            {
                message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ConnectionAcknowledgement);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConnectionAcknowledgement other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Message != other.Message) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Message.Length != 0) hash ^= Message.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Message.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Message);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Message.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConnectionAcknowledgement other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Message.Length != 0)
            {
                Message = other.Message;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Message = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class SendNym : pb::IMessage<SendNym>
    {
        private static readonly pb::MessageParser<SendNym> _parser = new pb::MessageParser<SendNym>(() => new SendNym());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SendNym> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Indy.Agent.Messages.ConnectionReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendNym()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendNym(SendNym other) : this()
        {
            did_ = other.did_;
            verkey_ = other.verkey_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendNym Clone()
        {
            return new SendNym(this);
        }

        /// <summary>Field number for the "did" field.</summary>
        public const int DidFieldNumber = 1;
        private string did_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Did
        {
            get { return did_; }
            set
            {
                did_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "verkey" field.</summary>
        public const int VerkeyFieldNumber = 2;
        private string verkey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Verkey
        {
            get { return verkey_; }
            set
            {
                verkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as SendNym);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SendNym other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Did != other.Did) return false;
            if (Verkey != other.Verkey) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Did.Length != 0) hash ^= Did.GetHashCode();
            if (Verkey.Length != 0) hash ^= Verkey.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Did.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Did);
            }
            if (Verkey.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Verkey);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Did.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Did);
            }
            if (Verkey.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Verkey);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SendNym other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Did.Length != 0)
            {
                Did = other.Did;
            }
            if (other.Verkey.Length != 0)
            {
                Verkey = other.Verkey;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Did = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Verkey = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class CreateConnectionOffer : pb::IMessage<CreateConnectionOffer>
    {
        private static readonly pb::MessageParser<CreateConnectionOffer> _parser = new pb::MessageParser<CreateConnectionOffer>(() => new CreateConnectionOffer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreateConnectionOffer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Indy.Agent.Messages.ConnectionReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateConnectionOffer()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateConnectionOffer(CreateConnectionOffer other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateConnectionOffer Clone()
        {
            return new CreateConnectionOffer(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as CreateConnectionOffer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreateConnectionOffer other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreateConnectionOffer other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
